pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // Mount Docker socket
    }
  }
  stages {
    stage('Checkout') {
      steps {
        // Perform Git checkout
        git branch: 'master', url: 'https://github.com/KKDevOps07/Jenkins/'
        // Debug: Ensure ATS-Server directory exists
        sh 'ls -R'
      }
    }
    stage('Build and Test') {
      steps {
        // Build and test the project
        sh 'cd ATS-Server && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://52.26.159.252:9000/" 
      }
      steps {
        withCredentials([string(credentialsId: 'Sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
          cd ATS-Server
          mvn sonar:sonar \
            -Dsonar.login=$SONAR_AUTH_TOKEN \
            -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "1819242/jenkins:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          sh '''
          cd ATS-Server
          docker build -t ${DOCKER_IMAGE} .
          '''
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            dockerImage.push()
          }
        }
      }
    }
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Jenkins"
        GIT_USER_NAME = "KKDevOps7"
      }
      steps {
        withCredentials([string(credentialsId: 'Github', variable: 'GITHUB_TOKEN')]) {
          sh '''
          cd ATS-Server
          git config user.email "kirangoud983@gmail.com"
          git config user.name "Kiran Kakara"
          sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" deploy.yml
          git add deploy.yml
          git commit -m "Update deployment image to version ${BUILD_NUMBER}"
          git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
          '''
        }
      }
    }
  }
}
